public class Week3_Coding_Assignment {

	public static void main(String[] args) {
		
		// 1.	Create an array of int called ages that contains the following values: 3, 9, 23, 64, 2, 8, 28, 93.
		int[] age = {3, 9, 23, 64, 2, 8, 28, 93};
		
		//a.	Programmatically subtract the value of the first element in the array from the value 
		//in the last element of the array (i.e. do not use ages[7] in your code). Print the result to the console.
		int sub = age[0] - age[age.length - 1];
				System.out.println(sub);
				
		//b.	Add a new age to your array and repeat the step above to ensure it is dynamic (works for arrays of different lengths).
		int n = age.length;
		int newArr[] = new int[n + 1];
		int newAge = 42;
				System.out.println(Arrays.toString(age));
				
			for(int i = 0; i < n; i++) {
				newArr[i] = age[i];}
		newArr[n] = newAge;
				System.out.println(Arrays.toString(newArr));
		int sub1 = newArr[0] - newArr[newArr.length - 1];
			System.out.println(sub1);
			
		//c.	Use a loop to iterate through the array and calculate the average age. Print the result to the console.
		int sum = 0;
		for (int number: newArr) {
			sum += number;
		}
		int average = sum / newArr.length;
		System.out.println(average);
		
		
		//2.	Create an array of String called names that contains the following values: “Sam”, “Tommy”, “Tim”, “Sally”, “Buck”, “Bob”.
		String[] names = {"Sam", "Tommy", "Tim", "Sally", "Buck", "Bob"};
		
		//a.	Use a loop to iterate through the array and calculate the average number of letters per name. Print the result to the console.
		double sumOfLetters = 0;
		for (String name : names) {
			sumOfLetters += name.length();
		}
		int noOfStrings = names.length;
		double averageLetters = sumOfLetters /noOfStrings;
				System.out.println(averageLetters);
				
		//b.	Use a loop to iterate through the array again and concatenate all the names together, separated by spaces, and print the result to the console.
		for (int k = 0; k < names.length; k++)
			System.out.print(names [k] + " ");
		
		//5.	Create a new array of int called nameLengths. Write a loop to iterate over the previously created names array and 
		//add the length of each name to the nameLengths array.
		int[] nameLengths = new int[6];
		nameLengths[0] = names[0].length();	
		nameLengths[1] = names[1].length();	
		nameLengths[2] = names[2].length();	
		nameLengths[3] = names[3].length();	
		nameLengths[4] = names[4].length();	
		nameLengths[5] = names[5].length();	
		System.out.println('\n' + Arrays.toString(nameLengths));
		
		//6.	Write a loop to iterate over the nameLengths array and calculate the sum of all the elements in the array. Print the result to the console.
		int sum1 = 0;
		for (int length: nameLengths) {
			sum1 += length;
		}
		System.out.println(sum1);
			}

	//7.	Write a method that takes a String, word, and an int, n, as arguments and returns the word concatenated to itself n number of times. 
			//(i.e. if I pass in “Hello” and 3, I would expect the method to return “HelloHelloHello”).
	public static String multiplyString(String word, int times) {
		String result = "";
		for (int index = 0; index < times; index += 1) {
			result += word;						
		}
		return result;	
	}
	
	//8.	Write a method that takes two Strings, firstName and lastName, and returns a full name 
	//(the full name should be the first and the last name as a String separated by a space).
	
	public static String createFullName(String firstName, String lastName) {
		String fullName = firstName + " " + lastName;
		return fullName;
	}
	
	
	//9.	Write a method that takes an array of int and returns true if the sum of all the ints in the array is greater than 100.
	
	public static boolean greater(int[]numbers, int z) {
		int compare = 100;
		int sum = 0;
		boolean greater = false;
		for (int number : numbers) {
			sum += number;			
		}
		if (sum > compare) {
			greater = true;
		}
		return greater;
	}
	
	//10.	Write a method that takes an array of double and returns the average of all the elements in the array.
	
	public static double calculateAverage(double[] array) {
		double sum = 0;
		for (double number : array) {
			sum += number;
		}
		return sum / array.length;
	}	
		
	//11.	Write a method that takes two arrays of double and returns true if the average of the elements in the first array 
	//is greater than the average of the elements in the second array.
	
	public static boolean compareAverages(double[]array1, double[]array2) {
		double sum1 = 0;
		for (double number1 : array1) {
			sum1 += number1;}
		double avg1 = sum1 / array1.length;
		
		double sum2 = 0;
		for (double number2 : array2) {
			sum2 += number2;}
		double avg2 = sum2 / array2.length;
		boolean comp = false;
		if (avg1 > avg2) {
			comp = true;
		}
		
	return comp;
	}
	
	//12.	Write a method called willBuyDrink that takes a boolean isHotOutside, and a double moneyInPocket, 
	//and returns true if it is hot outside and if moneyInPocket is greater than 10.50.
	
	public static boolean willBuyDrink(boolean isHotOutside, double moneyInPocket) {
		boolean buyIt = false;
		if(isHotOutside = true && moneyInPocket > 10.50) {
			buyIt = true;
		}
		
		return buyIt;
	}	
	
	//13.	Create a method of your own that solves a problem. In comments, write what the method does and why you created it.
	// This method returns true if a String exists ina string array.
	
	public static boolean doesArrayContainString(String[] array, String string) {
		for (String str : array) {
			if (str.equals(string)) {
				return true;
			}
			}	return false;
	}
	
}
